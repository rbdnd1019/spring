/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.75
 * Generated at: 2022-05-21 10:03:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/workspace/workspace_hgw_spring/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/team0/WEB-INF/lib/spring-security-taglibs-5.0.7.RELEASE.jar!/META-INF/security.tld", Long.valueOf(1532606274000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-security-taglibs-5.0.7.RELEASE.jar", Long.valueOf(1651151418248L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("   	<head>\r\n");
      out.write("		<meta name=\"google-signin-client_id\" content=\"347160871077-577pujh4td24j5iv9dog5kp903esu6rh.apps.googleusercontent.com\">\r\n");
      out.write("    	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/head.jsp", out, false);
      out.write("\r\n");
      out.write("      \r\n");
      out.write("   </head>\r\n");
      out.write("   <!-- body -->\r\n");
      out.write("   <body class=\"main-layout\">\r\n");
      out.write("     ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/nav.jsp", out, false);
      out.write("\r\n");
      out.write("      <!-- loader  -->\r\n");
      out.write("    <!--   <div class=\"loader_bg\">\r\n");
      out.write("         <div class=\"loader\"><img src=\"/resources/assets/images/loading.gif\" alt=\"#\" /></div>\r\n");
      out.write("      </div> -->\r\n");
      out.write("      <!-- end loader -->\r\n");
      out.write(" \r\n");
      out.write("      <!-- banner -->\r\n");
      out.write("      <section class=\"banner_main\">\r\n");
      out.write("         <div class=\"container\">\r\n");
      out.write("	        <div class=\"row d_flex \">\r\n");
      out.write("	        <div class=\"col-md-6\">\r\n");
      out.write("               <div class=\"text-bg\">\r\n");
      out.write("                  <h1>저기압일땐<br>\r\n");
      out.write("					  고기앞으로<br>\r\n");
      out.write("					  가기위해 -></h1>\r\n");
      out.write("                  <h3>★ 집밥귱선생님의 오마카세 ㅎㅅㅎ ★</h3>\r\n");
      out.write("               </div>\r\n");
      out.write("            </div>\r\n");
      out.write("	            <div class=\"col-md-6\" style=\"margin-top: 100px;\">\r\n");
      out.write("	               <form id=\"request\" class=\"main_form align-items-center\" method=\"post\" action=\"/login\">\r\n");
      out.write("	                  <div class=\"row\">\r\n");
      out.write("	                     <div class=\"col-md-12 \">\r\n");
      out.write("	                     	<label for=\"username\">아이디</label>\r\n");
      out.write("	                        <input class=\"contactus mb-5\" placeholder=\"아이디\" type=\"text\" name=\"username\"> \r\n");
      out.write("	                     </div>\r\n");
      out.write("	                     <div class=\"col-md-12 \">\r\n");
      out.write("	                     	<label for=\"password\">비밀번호</label>\r\n");
      out.write("	                        <input class=\"contactus mb-5\" placeholder=\"비밀번호\" type=\"password\" name=\"password\">\r\n");
      out.write("	                     </div>\r\n");
      out.write("						<!-- <div class=\"md-3\">\r\n");
      out.write("							<div class=\"col-sm-12\" style=\"display: inline;\">\r\n");
      out.write("								 <a href=\"javascript:kakaoLogin();\" ><img src=\"/resources/assets/images/kakao_login_large.png\" alt=\"카카오계정 로그인\" class=\"login_btn\" /></a>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"col-sm-12 \" style=\"display: inline;\">\r\n");
      out.write("								<div id=\"naver_id_login\"></div>\r\n");
      out.write("							</div>\r\n");
      out.write("							<div class=\"g-signin2 mb-3\" data-onsuccess=\"onSignIn\"></div>\r\n");
      out.write("						</div> -->\r\n");
      out.write("						");
      if (_jspx_meth_sec_005fcsrfInput_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	                    <div class=\"col-sm-12 \">\r\n");
      out.write("	                        <button class=\"btn btn-block send_btn mb-3\" id=\"send_btn\">로그인</button>\r\n");
      out.write("	                        <a class=\"btn btn-block send_btn mb-3\" id=\"send_btn\" href=\"/member/contract\">회원가입</a>\r\n");
      out.write("	                    </div>\r\n");
      out.write("						<div class=\"btn-wrap btn-wrap-column col-md-12 mb-3\">\r\n");
      out.write("							<a href=\"javascript:kakaoLogin();\">\r\n");
      out.write("								<button type=\"button\" class=\"btn btn-long icon-layout icon-kakao\" >카카오로 시작하기</button>\r\n");
      out.write("							</a> <!--disabled(클래스 아님) 비활성화-->\r\n");
      out.write("						</div>\r\n");
      out.write("	                 </div>\r\n");
      out.write("	              </form>\r\n");
      out.write("	           </div>\r\n");
      out.write("	        </div>\r\n");
      out.write("         </div>\r\n");
      out.write("      </section>\r\n");
      out.write("      <!-- end banner -->\r\n");
      out.write("\r\n");
      out.write("      <!--  footer -->\r\n");
      out.write("      <footer>\r\n");
      out.write("         ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("      </footer>\r\n");
      out.write("      <!-- end footer -->\r\n");
      out.write("      \r\n");
      out.write("       \r\n");
      out.write("      <!--  login api -->\r\n");
      out.write("      <!-- <script src=\"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\" charset=\"utf-8\"></script>\r\n");
      out.write("      <script type=\"text/javascript\" src=\"https://static.nid.naver.com/js/naverLogin_implicit-1.0.3.js\" charset=\"utf-8\"></script> -->\r\n");
      out.write("  	  <script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-1.11.3.min.js\"></script>\r\n");
      out.write("      <script src=\"https://developers.kakao.com/sdk/js/kakao.js\"></script>\r\n");
      out.write("	  <<!-- script src=\"https://apis.google.com/js/platform.js\" async defer></script> -->\r\n");
      out.write("	  \r\n");
      out.write("       \r\n");
      out.write("	   <script>\r\n");
      out.write("	   		/* kakao */\r\n");
      out.write("	        window.Kakao.init('8078298f58e4ab6bfa88c7240345f660');\r\n");
      out.write("	\r\n");
      out.write("	        function kakaoLogin() {\r\n");
      out.write("	            window.Kakao.Auth.login({\r\n");
      out.write("	                scope: 'profile_nickname,profile_image, account_email, gender, age_range, birthday', //동의항목 페이지에 있는 개인정보 보호 테이블의 활성화된 ID값을 넣습니다.\r\n");
      out.write("	                success: function(response) {\r\n");
      out.write("	                    console.log(response) // 로그인 성공하면 받아오는 데이터\r\n");
      out.write("	                    window.Kakao.API.request({ // 사용자 정보 가져오기 \r\n");
      out.write("	                        url: '/v2/user/me',\r\n");
      out.write("	                        success: (res) => {\r\n");
      out.write("	                            const kakao_account = res.kakao_account;\r\n");
      out.write("	                            console.log(kakao_account)\r\n");
      out.write("	                        }\r\n");
      out.write("	                    });\r\n");
      out.write("	                    // window.location.href='/ex/kakao_login.html' //리다이렉트 되는 코드\r\n");
      out.write("	                },\r\n");
      out.write("	                fail: function(error) {\r\n");
      out.write("	                    console.log(error);\r\n");
      out.write("	                }\r\n");
      out.write("	            });\r\n");
      out.write("	        }\r\n");
      out.write("	    	\r\n");
      out.write("        /* google */\r\n");
      out.write("		function onSignIn(googleUser) {\r\n");
      out.write("				var profile = googleUser.getBasicProfile();\r\n");
      out.write("				console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\r\n");
      out.write("				console.log('Name: ' + profile.getName());\r\n");
      out.write("				console.log('Image URL: ' + profile.getImageUrl());\r\n");
      out.write("				console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\r\n");
      out.write("				\r\n");
      out.write("				var idToken = googleUser.getAuthResponse().idToken;\r\n");
      out.write("				console.log(\"ID Token: \" + idToken);\r\n");
      out.write("		}\r\n");
      out.write("		</script>\r\n");
      out.write("\r\n");
      out.write("   </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_sec_005fcsrfInput_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  sec:csrfInput
    org.springframework.security.taglibs.csrf.CsrfInputTag _jspx_th_sec_005fcsrfInput_005f0 = (org.springframework.security.taglibs.csrf.CsrfInputTag) _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody.get(org.springframework.security.taglibs.csrf.CsrfInputTag.class);
    boolean _jspx_th_sec_005fcsrfInput_005f0_reused = false;
    try {
      _jspx_th_sec_005fcsrfInput_005f0.setPageContext(_jspx_page_context);
      _jspx_th_sec_005fcsrfInput_005f0.setParent(null);
      int _jspx_eval_sec_005fcsrfInput_005f0 = _jspx_th_sec_005fcsrfInput_005f0.doStartTag();
      if (_jspx_th_sec_005fcsrfInput_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fsec_005fcsrfInput_005fnobody.reuse(_jspx_th_sec_005fcsrfInput_005f0);
      _jspx_th_sec_005fcsrfInput_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_sec_005fcsrfInput_005f0, _jsp_getInstanceManager(), _jspx_th_sec_005fcsrfInput_005f0_reused);
    }
    return false;
  }
}
